#include "Adafruit_VL53L0X.h"
#include <ESP32Servo.h>

#define SERVO_PIN 12

Adafruit_VL53L0X lox = Adafruit_VL53L0X();
Servo myServo;

double sensorValue;
double currentTime;
double lastTime;
double P = 2;
double I = 0.1;
double D = 0.1;
double error;
double dt;
double setpoint = 550;
double previous;

void setup() {
  Serial.begin(115200);

  // wait until the serial port opens for native USB devices
  while (!Serial) {
    delay(1);
  }

  myServo.attach(SERVO_PIN);
  myServo.write(135);  // Set the initial position of the servo

  Serial.println("Adafruit VL53L0X test");
  if (!lox.begin()) {
    Serial.println(F("Failed to boot VL53L0X"));
    while (1);
  }
  // power 
  Serial.println(F("VL53L0X API Simple Ranging example\n\n"));
}

void loop() {
  if (millis() - currentTime >= 50) {
    currentTime = millis();
    double now = millis();
    dt = (now - lastTime) / 1000.0;
    lastTime = now;

    sensorValue = readSensor();
    sensorValue = map(sensorValue, 20.0, 350.0, 0.0, 1000.0);
    error = setpoint - sensorValue;
    double output = calculatePID();

    output = map(output, -1000, 1000, 210, 60);
  
    if(output < 60){output = 60;}
    if(output > 220) {output = 220;}

    myServo.write(output); 

    Serial.println(output);
    Serial.println(sensorValue);
  }
}

double calculatePID() {
  double proportioneel = error * P;
  double integraal = (integraal + error * dt) * I;
  double differentiaal = ((error - previous) / dt) * D;
  previous = error;
  return (proportioneel + integraal + differentiaal);
}

double readSensor() {
  // Read sensor value
  VL53L0X_RangingMeasurementData_t measure;
  lox.rangingTest(&measure, false); // pass in 'true' to get debug data printout!

  // Write sensor value
  if (measure.RangeStatus != 4) {  // phase failures have incorrect data
    return measure.RangeMilliMeter;
  } else {
    Serial.println(" out of range ");
    return 0.0;  // Return 0 if out of range
  }
}

